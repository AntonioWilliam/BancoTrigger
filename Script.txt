drop table pacientes;
drop table profissionais;
drop table especialidades;
drop table consultas;
drop table obitos;


create table if not exists pacientes(
       id serial PRIMARY KEY,
       nome varchar(40) not null,
       sexo varchar(1),
       obito boolean,
       insertedAt TIMESTAMP NOT NULL DEFAULT NOW());

create table if not exists profissionais(
       id serial PRIMARY KEY,
       nome varchar(50));

create table if not exists especialidades(
       id serial PRIMARY KEY,
       nome varchar(50));

create table if not exists consultas(
       id serial PRIMARY KEY,
       
       especialidade_id integer, 
       pac_id integer,
       profiss_id integer);

create table if not exists obitos(
       id serial PRIMARY KEY,
       obs text);


ALTER TABLE consultas
ADD CONSTRAINT FkEspecialidadeDaConsulta FOREIGN KEY
    (especialidade_id)
REFERENCES
    especialidades(id);


ALTER TABLE consultas
ADD CONSTRAINT FkProfissionalDaConsulta FOREIGN KEY   
    (profiss_id)
REFERENCES
    profissionais(id);


ALTER TABLE 
ADD CONSTRAINT FkProfissionalDaConsulta FOREIGN KEY   
    (profiss_id)
REFERENCES
    profissionais(id);

    insert into pacientes (nome, sexo) values ('Ricardo Lima','m');
    insert into especialidades (nome) values ('ginecologista');

    CREATE OR REPLACE FUNCTION trgValidaDadosConsulta()  RETURNS trigger AS $trgValidaDadosConsulta$

DECLARE
 linhaPac record;
 espec_row record;

 --counter integer := 1;

BEGIN


        SELECT INTO linhaPac
        *  FROM pacientes as p where p.id = NEW.pac_id;

        SELECT INTO espec_row
        *  FROM especialidades as esp where esp.id = NEW.especialidade_id;

        IF linhaPac.sexo = 'm' AND espec_row.nome = 'ginecologista' THEN
           RAISE EXCEPTION 'Ginecologista apenas para paciente do sexo feminino';
        ELSEIF linhaPac.sexo = 'f' AND espec_row.nome = 'urologista' THEN
           RAISE EXCEPTION 'Urologista apenas para paciente do sexo masculino';
        END IF;
        
        
    
        RETURN NEW;
END;
$trgValidaDadosConsulta$ LANGUAGE plpgsql; 

CREATE TRIGGER ValidaDadosConsulta
BEFORE INSERT OR UPDATE ON 
FOR EACH ROW --FOR EACH STATEMENT
EXECUTE PROCEDURE trgValidaDadosConsulta();
